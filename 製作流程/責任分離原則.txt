概念是: 
拿到這個accountID後會關聯式資料表到訂單那邊，
工程師強調不要存太多的資料在我們這邊，這是啥意思我也聽不懂。

===

ChatGPT 說：
這句話你的工程師說的其實很合理，他是在講「資料分層設計」與「責任分離」的原則。
我幫你用簡單白話說明給你聽 👇

你現在的角色（使用者端）負責什麼？

你負責：
管理帳號資料（id, username, password_hash, accountID）
接收到 accountID 後，從本地資料庫查詢使用者的資料（你做到這邊就好）

🧠 工程師的意思是什麼？
🗣️ 工程師說：「不要存太多資料在你這邊」

他的意思是：
你這個帳號系統只要有最基本的資訊，例如：帳號、密碼、accountID。
其他複雜的資料（像訂單、消費紀錄、歷史紀錄等等），應該由我們（工程師那邊的主系統）來管理。

===

關聯式資料表設計（後端主系統）
他們會這樣做：

資料表1：Users（你這邊只給他 accountID）

資料表2：Orders（他們那邊）
- 每一筆訂單會有一個 accountID
- 他們用 accountID 去查是哪個帳號的訂單

這樣就可以做到：
你提供「使用者的身分 ID（accountID）」，他們來提供該使用者的行為紀錄、交易資料等等。

===

結論：工程師要你「只保存基本資料，不要重複保存訂單」
這樣做的好處：

你資料庫很乾淨、不會肥大
訂單資料集中由一套主系統管理，更安全、更一致
當訂單有變動，不需要同步好幾套資料庫

===

你該做的：
保留 accountID（作為唯一身分識別代碼）
不用管訂單、不用保存額外的資料
接下來他們會透過你提供的 accountID 來關聯訂單
